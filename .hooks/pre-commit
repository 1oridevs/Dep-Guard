#!/usr/bin/env node

const { execSync } = require('child_process');

try {
  console.log("üîç Running Dependency Guardian check...");
  
  const scanOutput = execSync('dependency-guardian scan --format json', { 
    encoding: 'utf8',
    stdio: ['ignore', 'pipe', 'pipe']
  });
  
  const results = JSON.parse(scanOutput);
  
  const highSeverity = (
    (results.summary?.vulnerabilities?.HIGH || 0) + 
    (results.summary?.vulnerabilities?.CRITICAL || 0)
  );
  
  const forbiddenLicenses = results.summary?.licenses?.NON_COMPLIANT || 0;
  
  if (highSeverity > 0 || forbiddenLicenses > 0) {
    console.error("‚ùå Dependency check failed!");
    console.error(`Found ${highSeverity} high/critical vulnerabilities and ${forbiddenLicenses} forbidden licenses`);
    console.error("Please fix these issues before committing");
    process.exit(1);
  }
  
  process.exit(0);
} catch (error) {
  console.error("Error running dependency check:", error.message);
  // Don't block the commit if the check fails to run
  process.exit(0);
} 